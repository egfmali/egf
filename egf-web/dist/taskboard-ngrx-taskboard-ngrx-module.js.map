{"version":3,"sources":["webpack:///./src/app/taskboard-ngrx/taskboard-ngrx.component.html","webpack:///./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","webpack:///./src/app/taskboard-ngrx/taskboard-ngrx.component.scss","webpack:///./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","webpack:///./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"names":[],"mappings":"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","file":"taskboard-ngrx-taskboard-ngrx-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"content-header text-left\\\">Task Board NgRx</div>\\n    <p class=\\\"content-sub-header\\\"></p>\\n  </div>\\n</div>\\n<!-- Taskboard Starts -->\\n<section id=\\\"taskboard\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-list mr-1  float-left\\\"></i> To Dos</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='todo'>\\n        <div *ngFor='let todo of todo'>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{todo.taskMessage}}</p>\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span\\n                class=\\\"primary\\\">{{todo.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-trending-up mr-1  float-left\\\"></i> In Progress</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='inProcess'>\\n        <div *ngFor='let inProcess of inProcess'>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{inProcess.taskMessage}}</p>\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span\\n                class=\\\"info\\\">{{inProcess.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-thumbs-up mr-1  float-left\\\"></i>Completed</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='completed'>\\n        <div *ngFor='let completed of completed'>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{completed.taskMessage}}</p>\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span\\n                class=\\\"success\\\">{{completed.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-alert-octagon mr-1  float-left\\\"></i>On Hold</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='backLog'>\\n        <div *ngFor='let backLog of backLog'>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{backLog.taskMessage}}</p>\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span\\n                class=\\\"warning\\\">{{backLog.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body pt-3 text-left\\\">\\n        <h5 class=\\\"text-bold-500\\\">Create new Task</h5>\\n        <form class=\\\"taskboard-app-input row\\\">\\n          <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\" placeholder=\\\"Title\\\">\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image gallery-icon-title\\\"></i>\\n            </div>\\n          </fieldset>\\n          <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder=\\\"Message\\\">\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image gallery-icon-msg\\\"></i>\\n            </div>\\n          </fieldset>\\n\\n          <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n              <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n              <span class=\\\"d-lg-inline-block d-none ml-1\\\">Create</span>\\n            </button>\\n          </fieldset>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n\\n</section>\\n<!-- Taskboard Ends -->\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardNGRXComponent } from './taskboard-ngrx.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardNGRXComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardNGRXRoutingModule { }","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0; }\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table; }\\n\\n/* .dragdrop-container {\\n    display: table-cell;\\n    background-color: rgba(255, 255, 255, 0.2);\\n    width: 25%;\\n  } */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2); }\\n\\n/*\\n   * note that styling gu-mirror directly is a bad practice because it's too generic.\\n   * you're better off giving the draggable elements a unique class and styling that directly!\\n   */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  transition: opacity 0.4s ease-in-out; }\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab; }\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing; }\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c; }\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3); }\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial; }\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move; }\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center; }\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px; }\\n\\n.taskboard-app-input i.ft.ft-plus-circle {\\n  position: relative;\\n  top: 2px; }\\n\\n.taskboard-app-input .form-control-position.control-position-right .gallery-icon-title {\\n  position: absolute;\\n  left: 363px;\\n  font-size: 1.2rem;\\n  top: 7px; }\\n\\n.taskboard-app-input .form-control-position.control-position-right .gallery-icon-msg {\\n  position: absolute;\\n  left: 573px;\\n  font-size: 1.2rem;\\n  top: 7px; }\\n\\n@media (max-width: 992px) {\\n  .taskboard-app-input i.ft.ft-plus-circle {\\n    padding: 0.25rem; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9USUVDT1VSQS9Eb2N1bWVudHMvQUdVTEFSL2thZGktZG9jL2VnZi9lZ2Ytd2ViL3NyYy9hcHAvdGFza2JvYXJkLW5ncngvdGFza2JvYXJkLW5ncnguY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Rhc2tib2FyZC1uZ3J4L3Rhc2tib2FyZC1uZ3J4LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUyxFQUFBOztBQUdYLHlDQUFBOztBQUNBO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjs7OztLQ0VLOztBREdMO0VBQ0Usb0NBQW9DLEVBQUE7O0FBR3RDOzs7SUNBSTs7QURJSjs7RUFLRSxvQ0FBb0MsRUFBQTs7QUFHdEM7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUVaLG9CQUFvQixFQUFBOztBQUd0QjtFQUNFLGdCQUFnQjtFQUVoQix3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSx5QkFBeUIsRUFBQTs7QUFHM0I7RUFDRSwwQ0FBMEMsRUFBQTs7QUFHNUM7O0VBRUUsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsb0NBQW9DO0VBQ3BDLFlBQVksRUFBQTs7QUFHZDtFQUNFLGNBQWM7RUFDZCxjQUFjO0VBQ2Qsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsV0FBVztFQUNYLFFBQVE7RUFDUixnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7O0FBR25CO0VBRUksa0JBQWtCO0VBQ2xCLFFBQVEsRUFBQTs7QUFIWjtFQU9NLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLFFBQVEsRUFBQTs7QUFWZDtFQWNNLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLFFBQVEsRUFBQTs7QUFLZDtFQUNFO0lBRUksZ0JBQWdCLEVBQUEsRUFDakIiLCJmaWxlIjoic3JjL2FwcC90YXNrYm9hcmQtbmdyeC90YXNrYm9hcmQtbmdyeC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5naC1mb3JrIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIGRyYWd1bGEtc3BlY2lmaWMgZXhhbXBsZSBwYWdlIHN0eWxlcyAqL1xuLmRyYWdkcm9wLXdyYXBwZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cblxuLyogLmRyYWdkcm9wLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gICAgd2lkdGg6IDI1JTtcbiAgfSAqL1xuLmRyYWdkcm9wLWNvbnRhaW5lcjpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLypcbiAgICogbm90ZSB0aGF0IHN0eWxpbmcgZ3UtbWlycm9yIGRpcmVjdGx5IGlzIGEgYmFkIHByYWN0aWNlIGJlY2F1c2UgaXQncyB0b28gZ2VuZXJpYy5cbiAgICogeW91J3JlIGJldHRlciBvZmYgZ2l2aW5nIHRoZSBkcmFnZ2FibGUgZWxlbWVudHMgYSB1bmlxdWUgY2xhc3MgYW5kIHN0eWxpbmcgdGhhdCBkaXJlY3RseSFcbiAgICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2LFxuLmd1LW1pcnJvciB7XG4gIC8vIG1hcmdpbjogMTBweDtcbiAgLy8gcGFkZGluZzogMTBweDtcbiAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbi1vdXQ7XG59XG5cbi5kcmFnZHJvcC1jb250YWluZXIgPiBkaXYge1xuICBjdXJzb3I6IG1vdmU7XG4gIGN1cnNvcjogZ3JhYjtcbiAgY3Vyc29yOiAtbW96LWdyYWI7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xufVxuXG4uZ3UtbWlycm9yIHtcbiAgY3Vyc29yOiBncmFiYmluZztcbiAgY3Vyc29yOiAtbW96LWdyYWJiaW5nO1xuICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7XG59XG5cbi5kcmFnZHJvcC1jb250YWluZXIgLmV4LW1vdmVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYztcbn1cblxuLmRyYWdkcm9wLWNvbnRhaW5lci5leC1vdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xufVxuXG4jbGVmdC1sb3ZlaGFuZGxlcyA+IGRpdixcbiNyaWdodC1sb3ZlaGFuZGxlcyA+IGRpdiB7XG4gIGN1cnNvcjogaW5pdGlhbDtcbn1cblxuLmhhbmRsZSB7XG4gIHBhZGRpbmc6IDAgNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBjdXJzb3I6IG1vdmU7XG59XG5cbi5pbWFnZS10aGluZyB7XG4gIG1hcmdpbjogMjBweCAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2xhY2stam9pbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICByaWdodDogMTBweDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC04cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xufVxuXG4udGFza2JvYXJkLWFwcC1pbnB1dCB7XG4gIGkuZnQuZnQtcGx1cy1jaXJjbGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDJweDtcbiAgfVxuICAuZm9ybS1jb250cm9sLXBvc2l0aW9uLmNvbnRyb2wtcG9zaXRpb24tcmlnaHQge1xuICAgIC5nYWxsZXJ5LWljb24tdGl0bGUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMzYzcHg7XG4gICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgIHRvcDogN3B4O1xuICAgIH1cblxuICAgIC5nYWxsZXJ5LWljb24tbXNnIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDU3M3B4O1xuICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgICB0b3A6IDdweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC50YXNrYm9hcmQtYXBwLWlucHV0IHtcbiAgICBpLmZ0LmZ0LXBsdXMtY2lyY2xlIHtcbiAgICAgIHBhZGRpbmc6IDAuMjVyZW07XG4gICAgfVxuICB9XG59XG4iLCIuZ2gtZm9yayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qIGRyYWd1bGEtc3BlY2lmaWMgZXhhbXBsZSBwYWdlIHN0eWxlcyAqL1xuLmRyYWdkcm9wLXdyYXBwZXIge1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4vKiAuZHJhZ2Ryb3AtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgICB3aWR0aDogMjUlO1xuICB9ICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG5cbi8qXG4gICAqIG5vdGUgdGhhdCBzdHlsaW5nIGd1LW1pcnJvciBkaXJlY3RseSBpcyBhIGJhZCBwcmFjdGljZSBiZWNhdXNlIGl0J3MgdG9vIGdlbmVyaWMuXG4gICAqIHlvdSdyZSBiZXR0ZXIgb2ZmIGdpdmluZyB0aGUgZHJhZ2dhYmxlIGVsZW1lbnRzIGEgdW5pcXVlIGNsYXNzIGFuZCBzdHlsaW5nIHRoYXQgZGlyZWN0bHkhXG4gICAqL1xuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdixcbi5ndS1taXJyb3Ige1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbi1vdXQ7IH1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiBncmFiO1xuICBjdXJzb3I6IC1tb3otZ3JhYjtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7IH1cblxuLmd1LW1pcnJvciB7XG4gIGN1cnNvcjogZ3JhYmJpbmc7XG4gIGN1cnNvcjogLW1vei1ncmFiYmluZztcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nOyB9XG5cbi5kcmFnZHJvcC1jb250YWluZXIgLmV4LW1vdmVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYzsgfVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7IH1cblxuI2xlZnQtbG92ZWhhbmRsZXMgPiBkaXYsXG4jcmlnaHQtbG92ZWhhbmRsZXMgPiBkaXYge1xuICBjdXJzb3I6IGluaXRpYWw7IH1cblxuLmhhbmRsZSB7XG4gIHBhZGRpbmc6IDAgNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBjdXJzb3I6IG1vdmU7IH1cblxuLmltYWdlLXRoaW5nIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnNsYWNrLWpvaW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtOHB4O1xuICBsaW5lLWhlaWdodDogMTZweDsgfVxuXG4udGFza2JvYXJkLWFwcC1pbnB1dCBpLmZ0LmZ0LXBsdXMtY2lyY2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDJweDsgfVxuXG4udGFza2JvYXJkLWFwcC1pbnB1dCAuZm9ybS1jb250cm9sLXBvc2l0aW9uLmNvbnRyb2wtcG9zaXRpb24tcmlnaHQgLmdhbGxlcnktaWNvbi10aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMzYzcHg7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB0b3A6IDdweDsgfVxuXG4udGFza2JvYXJkLWFwcC1pbnB1dCAuZm9ybS1jb250cm9sLXBvc2l0aW9uLmNvbnRyb2wtcG9zaXRpb24tcmlnaHQgLmdhbGxlcnktaWNvbi1tc2cge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDU3M3B4O1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgdG9wOiA3cHg7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC50YXNrYm9hcmQtYXBwLWlucHV0IGkuZnQuZnQtcGx1cy1jaXJjbGUge1xuICAgIHBhZGRpbmc6IDAuMjVyZW07IH0gfVxuIl19 */\"","import { Component, ViewEncapsulation, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { Task } from './taskboard-ngrx.model';\n\nimport { Store } from '@ngrx/store';\nimport { Observable ,  Subscription } from 'rxjs';\n\nimport * as TaskboadActions from './store/taskboard.actions';\nimport * as fromTaskboard from './store/taskboard.reducers';\n\n@Component({\n  selector: 'app-ngrx-taskboard',\n  templateUrl: './taskboard-ngrx.component.html',\n  styleUrls: ['./taskboard-ngrx.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskboardNGRXComponent implements OnInit {\n\n  @ViewChild('todoTitle', {static: false}) titleInputRef: ElementRef;\n  @ViewChild('todoMessage', {static: false}) messageInputRef: ElementRef;\n  subscription: Subscription;\n  taskboardState: Observable<fromTaskboard.State>;\n\n  public todo: Task[];\n  public inProcess: Task[];\n  public backLog: Task[];\n  public completed: Task[];\n\n  constructor(private elRef: ElementRef, private store: Store<fromTaskboard.FeatureState>) {\n\n  }\n\n  ngOnInit() {\n    this.taskboardState = this.store.select('task');\n    this.subscription = this.taskboardState.subscribe(\n      data => {\n        this.todo = data.todo;\n        this.inProcess = data.inProcess;\n        this.backLog = data.backLog;\n        this.completed = data.completed;\n      }\n    );\n  }\n\n  onAddTask() {\n    if (this.messageInputRef.nativeElement.value != \"\" && this.titleInputRef.nativeElement.value != \"\") {\n      this.store.dispatch(new TaskboadActions.AddTodo(new Task(\n        this.titleInputRef.nativeElement.value,\n        this.messageInputRef.nativeElement.value,\n        'Nov 12',\n        'Elizabeth Elliott',\n        'assets/img/portrait/small/avatar-s-3.png',\n        'New'\n      )));\n    }\n    this.titleInputRef.nativeElement.value = \"\";\n    this.messageInputRef.nativeElement.value = \"\";\n    this.titleInputRef.nativeElement.focus();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from '@ngrx/store';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { TaskboardNGRXRoutingModule } from \"./taskboard-ngrx-routing.module\";\n\nimport { TaskboardNGRXComponent } from \"./taskboard-ngrx.component\";\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardNGRXRoutingModule,\n        DragulaModule,\n        StoreModule.forFeature('task', taskReducer)\n    ],\n    declarations: [\n        TaskboardNGRXComponent\n    ]\n})\nexport class TaskboardNGRXModule { }\n"],"sourceRoot":""}