{"version":3,"sources":["webpack:///./node_modules/@angular/material/esm5/card.es5.js","webpack:///./src/app/configuration/component/nature-colis/nature-colis.component.html","webpack:///./src/app/configuration/component/point-depot/point-depot.component.html","webpack:///./src/app/configuration/component/societe/societe.component.html","webpack:///./src/app/configuration/component/trajet/trajet.component.html","webpack:///./src/app/configuration/component/type-acheminement/type-acheminement.component.html","webpack:///./src/app/configuration/component/type-colis/type-colis.component.html","webpack:///./src/app/configuration/component/type-devis/type-devis.component.html","webpack:///./src/app/configuration/component/ville-escale/ville-escale.component.html","webpack:///./src/app/configuration/component/nature-colis/nature-colis.component.scss","webpack:///./src/app/configuration/component/nature-colis/nature-colis.component.ts","webpack:///./src/app/configuration/component/point-depot/point-depot.component.scss","webpack:///./src/app/configuration/component/point-depot/point-depot.component.ts","webpack:///./src/app/configuration/component/societe/societe.component.scss","webpack:///./src/app/configuration/component/societe/societe.component.ts","webpack:///./src/app/configuration/component/trajet/trajet.component.scss","webpack:///./src/app/configuration/component/trajet/trajet.component.ts","webpack:///./src/app/configuration/component/type-acheminement/type-acheminement.component.scss","webpack:///./src/app/configuration/component/type-acheminement/type-acheminement.component.ts","webpack:///./src/app/configuration/component/type-colis/type-colis.component.scss","webpack:///./src/app/configuration/component/type-colis/type-colis.component.ts","webpack:///./src/app/configuration/component/type-devis/type-devis.component.scss","webpack:///./src/app/configuration/component/type-devis/type-devis.component.ts","webpack:///./src/app/configuration/component/ville-escale/ville-escale.component.scss","webpack:///./src/app/configuration/component/ville-escale/ville-escale.component.ts","webpack:///./src/app/configuration/configuration-routing.module.ts","webpack:///./src/app/configuration/configuration.module.ts","webpack:///./src/app/configuration/model/nature-colis.ts","webpack:///./src/app/configuration/model/point-depot.ts","webpack:///./src/app/configuration/model/societe.ts","webpack:///./src/app/configuration/model/trajet.ts","webpack:///./src/app/configuration/model/type-acheminement.ts","webpack:///./src/app/configuration/model/type-colis.ts","webpack:///./src/app/configuration/model/type-devis.ts","webpack:///./src/app/configuration/model/ville-escale.ts","webpack:///./src/app/configuration/service/nature-colis.service.ts","webpack:///./src/app/configuration/service/point-depot.service.ts","webpack:///./src/app/configuration/service/societe.service.ts","webpack:///./src/app/configuration/service/trajet.service.ts","webpack:///./src/app/configuration/service/type-acheminement.service.ts","webpack:///./src/app/configuration/service/type-colis.service.ts","webpack:///./src/app/configuration/service/type-devis.service.ts","webpack:///./src/app/configuration/service/ville-escale.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoI;AACvD;AACpB;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AAC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","file":"configuration-configuration-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\n    MatCardContent.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-card-content' }\n                },] },\n    ];\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\n    MatCardTitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                    host: {\n                        'class': 'mat-card-title'\n                    }\n                },] },\n    ];\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\n    MatCardSubtitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                    host: {\n                        'class': 'mat-card-subtitle'\n                    }\n                },] },\n    ];\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n    MatCardActions.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    }\n                },] },\n    ];\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\n    MatCardFooter.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' }\n                },] },\n    ];\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\n    MatCardImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' }\n                },] },\n    ];\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\n    MatCardSmImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' }\n                },] },\n    ];\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\n    MatCardMdImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' }\n                },] },\n    ];\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\n    MatCardLgImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' }\n                },] },\n    ];\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\n    MatCardXlImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' }\n                },] },\n    ];\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\n    MatCardAvatar.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' }\n                },] },\n    ];\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    function MatCard(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n    MatCard.decorators = [\n        { type: Component, args: [{selector: 'mat-card',\n                    exportAs: 'matCard',\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-card',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatCard.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\n    MatCardHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-card-header',\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-header' }\n                },] },\n    ];\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\n    MatCardTitleGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-card-title-group',\n                    template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-title-group' }\n                },] },\n    ];\n    return MatCardTitleGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\n    MatCardModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                        MatCardXlImage, MatCardAvatar,\n                    ],\n                },] },\n    ];\n    return MatCardModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n//# sourceMappingURL=card.es5.js.map\n","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-content\\\">\\n                <div class=\\\"px-3\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-ils\\\"></i> {{natureColisSelected.uid ? natureColisSelected.libelle : 'Nouvelle nature du colis'}}</h4>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Libelle</label>\\n                                <input type=\\\"text\\\" id=\\\"nama\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Libelle\\\"\\n                                       [(ngModel)]=\\\"natureColisSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                       #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    libelle invalid !\\n                                </div>\\n\\n<!--                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">-->\\n<!--                                    libelle invalid !</small>-->\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea id=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                                          placeholder=\\\"Description\\\"\\n                                          [(ngModel)]=\\\"natureColisSelected.description\\\" name=\\\"description\\\" required\\n                                          #description=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                </textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{natureColisSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"fa fa-ils\\\"></i> Nature du colis</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"natureColiss$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"description\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Description</ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n     <div class=\\\"px-4\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-map-pin\\\"></i> {{pointDepotSelected.uid ? pointDepotSelected.ville : 'Nouvelle point de depot'}}</h4>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"libelle\\\">Libelle</label>\\n                                        <input type=\\\"text\\\" id=\\\"libelle\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Libelle\\\"\\n                                               [(ngModel)]=\\\"pointDepotSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                               #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            libelle invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"code\\\">Code</label>\\n                                        <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Code\\\"\\n                                               [(ngModel)]=\\\"pointDepotSelected.code\\\" name=\\\"code\\\" required\\n                                               #code=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                        <div [hidden]=\\\"code.valid || code.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            code invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nameResponsable\\\">Responsable</label>\\n                                <input type=\\\"text\\\" id=\\\"nameResponsable\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Responsable\\\"\\n                                       [(ngModel)]=\\\"pointDepotSelected.nameResponsable\\\" name=\\\"nameResponsable\\\" required\\n                                       #nameResponsable=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                <div [hidden]=\\\"nameResponsable.valid || nameResponsable.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    responsable invalid !\\n                                </div>\\n                            </div>\\n\\n\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"pay\\\">Pays</label>\\n                                        <ng-select id=\\\"pay\\\"\\n                                           [items]=\\\"pays\\\"\\n                                           [virtualScroll]=\\\"true\\\"\\n                                           bindLabel=\\\"name\\\" bindValue=\\\"name\\\" placeholder=\\\"Selectionner le pays\\\" appendTo=\\\"body\\\"\\n                                           [(ngModel)]=\\\"pointDepotSelected.pays\\\" name=\\\"pays\\\" required\\n                                           (select)=\\\"onSelected($event)\\\"\\n                                           #pay=\\\"ngModel\\\">\\n                                        </ng-select>\\n                                        <div [hidden]=\\\"pay.valid || pay.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                            pays invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"ville\\\">Ville</label>\\n                                        <input type=\\\"text\\\" id=\\\"ville\\\" class=\\\"form-control\\\"\\n                                           placeholder=\\\"Ville\\\"\\n                                           [(ngModel)]=\\\"pointDepotSelected.ville\\\" name=\\\"ville\\\" required\\n                                           #ville=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                        <div [hidden]=\\\"ville.valid || ville.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            ville invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"address\\\">Adresse</label>\\n                                <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Adresse\\\"\\n                                       [(ngModel)]=\\\"pointDepotSelected.address\\\" name=\\\"address\\\"\\n                                       #address=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                            </div>\\n\\n\\n                            <div style=\\\"width: 100%\\\">\\n\\n<!--                                <div class=\\\"form-group\\\">-->\\n<!--                                    <mat-google-maps-autocomplete-->\\n<!--                                            [country]=\\\"pointDepotSelected.pays\\\"-->\\n<!--                                            type=\\\"address\\\"-->\\n<!--                                            placeholderText=\\\"Adresse sur maps\\\"-->\\n<!--                                            id=\\\"address\\\" [(ngModel)]=\\\"pointDepotSelected.address\\\" name=\\\"address\\\"-->\\n<!--                                            (onAutocompleteSelected)=\\\"onAutocompleteSelected($event)\\\"-->\\n<!--                                            (onLocationSelected)=\\\"onLocationSelected($event)\\\"-->\\n<!--                                            (onGermanAddressMapped)=\\\"onGermanAddressMapped($event)\\\">-->\\n<!--                                    </mat-google-maps-autocomplete>-->\\n<!--                                </div>-->\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <agm-map\\n                                            [latitude]=\\\"latitude\\\"\\n                                            [longitude]=\\\"longitude\\\"\\n                                            [scrollwheel]=\\\"true\\\"\\n                                            [zoom]=\\\"zoom\\\">\\n                                        <agm-marker\\n                                            [latitude]=\\\"latitude\\\"\\n                                            [longitude]=\\\"longitude\\\"\\n                                            [markerDraggable]=\\\"true\\\"\\n                                            (dragEnd)=\\\"markerDragEnd($event)\\\"></agm-marker>\\n                                    </agm-map>\\n                                </div>\\n\\n\\n                            </div>\\n\\n\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{pointDepotSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\">Point de dépots</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"pointDepots$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"code\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Code</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"address\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Adresse</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ row.address }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"nameResponsable\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Responsable</ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"fa fa-user-secret font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n     <div class=\\\"px-4\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-university\\\"></i> {{societeSelected.uid ? societeSelected.libelle : 'Nouvelle sociéte'}}</h4>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"libelle\\\">Libelle</label>\\n                                <input type=\\\"text\\\" id=\\\"libelle\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Libelle\\\"\\n                                       [(ngModel)]=\\\"societeSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                       #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    libelle invalid !\\n                                </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"code\\\">Code</label>\\n                                        <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Code\\\"\\n                                               [(ngModel)]=\\\"societeSelected.code\\\" name=\\\"code\\\" required\\n                                               #code=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"code.valid || code.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            code invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"phone\\\">Téléphone</label>\\n                                        <input type=\\\"text\\\" id=\\\"phone\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Téléphone\\\"\\n                                               [(ngModel)]=\\\"societeSelected.phone\\\" name=\\\"phone\\\" required\\n                                               #phone=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"phone.valid || phone.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            téléphone invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"email\\\">Email</label>\\n                                        <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Email\\\"\\n                                               [(ngModel)]=\\\"societeSelected.email\\\" name=\\\"phone\\\"\\n                                               #email=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n\\n\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"pay\\\">Pays</label>\\n                                        <ng-select id=\\\"pay\\\"\\n                                           [items]=\\\"pays\\\"\\n                                           [virtualScroll]=\\\"true\\\"\\n                                           bindLabel=\\\"name\\\" bindValue=\\\"name\\\" placeholder=\\\"Selectionner le pays\\\" appendTo=\\\"body\\\"\\n                                           [(ngModel)]=\\\"societeSelected.pays\\\" name=\\\"pays\\\" required\\n                                           (select)=\\\"onSelected($event)\\\"\\n                                           #pay=\\\"ngModel\\\">\\n                                        </ng-select>\\n                                        <div [hidden]=\\\"pay.valid || pay.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                            pays invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"ville\\\">Ville</label>\\n                                        <input type=\\\"text\\\" id=\\\"ville\\\" class=\\\"form-control\\\"\\n                                           placeholder=\\\"Ville\\\"\\n                                           [(ngModel)]=\\\"societeSelected.ville\\\" name=\\\"ville\\\" required\\n                                           #ville=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                        <div [hidden]=\\\"ville.valid || ville.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            ville invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"fax\\\">Fax</label>\\n                                        <input type=\\\"text\\\" id=\\\"fax\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Fax\\\"\\n                                               [(ngModel)]=\\\"societeSelected.fax\\\" name=\\\"fax\\\"\\n                                               #fax=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"bp\\\">Bp</label>\\n                                        <input type=\\\"text\\\" id=\\\"bp\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Bp\\\"\\n                                               [(ngModel)]=\\\"societeSelected.bp\\\" name=\\\"bp\\\"\\n                                               #bp=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"address\\\">Adresse</label>\\n                                <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Adresse\\\"\\n                                       [(ngModel)]=\\\"societeSelected.address\\\" name=\\\"address\\\"\\n                                       #address=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                            </div>\\n\\n\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{societeSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\">Sociétes</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"societes$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n<!--                <ngx-datatable-column name=\\\"code\\\">-->\\n<!--                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>-->\\n<!--                        <span (click)=\\\"sort()\\\"> Code</span>-->\\n<!--                    </ng-template>-->\\n<!--                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>-->\\n<!--                        <strong>{{ value }}</strong>-->\\n<!--                    </ng-template>-->\\n<!--                </ngx-datatable-column>-->\\n\\n                <ngx-datatable-column name=\\\"phone\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Téléphone</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"email\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Email</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"address\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Adresse</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ row.address }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"fa fa-user-secret font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n <ng-template #contentMaps let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n     <div class=\\\"px-4\\\">\\n        <div class=\\\"form-body\\\">\\n            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-road\\\"></i> Détail {{trajetSelected?.libelle}}</h4>\\n\\n<!--            <agm-map-->\\n<!--                    [latitude]=\\\"latitude\\\"-->\\n<!--                    [longitude]=\\\"longitude\\\"-->\\n<!--                    [scrollwheel]=\\\"true\\\"-->\\n<!--                    [zoom]=\\\"zoom\\\">-->\\n<!--                <agm-marker-->\\n<!--                        [latitude]=\\\"latitude\\\"-->\\n<!--                        [longitude]=\\\"longitude\\\"-->\\n<!--                        [markerDraggable]=\\\"true\\\"-->\\n<!--                        (dragEnd)=\\\"markerDragEnd($event)\\\"></agm-marker>-->\\n<!--            </agm-map>-->\\n\\n            </div>\\n        <div class=\\\"form-actions\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                <i class=\\\"ft-x\\\"></i> Fermer\\n            </button>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n\\n <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n     <div class=\\\"px-4\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-road\\\"></i> {{trajetSelected.uid ? trajetSelected.libelle : 'Nouveau trajet'}}</h4>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-9\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"libelle\\\">Libelle</label>\\n                                        <input type=\\\"text\\\" id=\\\"libelle\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Libelle\\\"\\n                                               [(ngModel)]=\\\"trajetSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                               #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            libelle invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-3\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"code\\\">Code</label>\\n                                        <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Code\\\"\\n                                               [(ngModel)]=\\\"trajetSelected.code\\\" name=\\\"code\\\" required\\n                                               #code=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"code.valid || code.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            code invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"pointDepart\\\">Point de depart</label>\\n                                        <ng-select id=\\\"pointDepart\\\"\\n                                                   [items]=\\\"villeEscales$ | async\\\"\\n                                                   [virtualScroll]=\\\"true\\\"\\n                                                   bindLabel=\\\"ville\\\" bindValue=\\\"ville\\\" placeholder=\\\"Selectionner le point de depart\\\" appendTo=\\\"body\\\"\\n                                                   [(ngModel)]=\\\"trajetSelected.pointDepart\\\" name=\\\"pointDepart\\\" required\\n                                                   #pointDepart=\\\"ngModel\\\">\\n                                        </ng-select>\\n                                        <div [hidden]=\\\"pointDepart.valid || pointDepart.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                            point de depart invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"pointArrivee\\\">Point d'arrivée</label>\\n                                        <ng-select\\n                                               id=\\\"pointArrivee\\\"\\n                                               [items]=\\\"villeEscales$ | async\\\"\\n                                               [virtualScroll]=\\\"true\\\"\\n                                               bindLabel=\\\"ville\\\"\\n                                               bindValue=\\\"ville\\\"\\n                                               placeholder=\\\"Selectionner le point d'arrivée\\\"\\n                                               appendTo=\\\"body\\\"\\n                                               [(ngModel)]=\\\"trajetSelected.pointArrivee\\\"\\n                                               name=\\\"pointArrivee\\\" required\\n                                               #pointArrivee=\\\"ngModel\\\">\\n                                        </ng-select>\\n                                        <div [hidden]=\\\"pointArrivee.valid || pointArrivee.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                            point d'arrivée invalid !\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-3\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"distance\\\">Distance(Km)</label>\\n                                        <input type=\\\"number\\\" id=\\\"distance\\\" class=\\\"form-control\\\"\\n                                           placeholder=\\\"Distance\\\"\\n                                           [(ngModel)]=\\\"trajetSelected.distance\\\" name=\\\"distance\\\"\\n                                           #distance=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                        <div [hidden]=\\\"distance.valid || distance.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            distance invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-9\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"description\\\">Description</label>\\n                                        <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\"\\n                                           placeholder=\\\"Description\\\"\\n                                           [(ngModel)]=\\\"trajetSelected.description\\\" name=\\\"description\\\"\\n                                           #description=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"villeEscale\\\">Villes d'escale</label>\\n                                    <ng-select id=\\\"villeEscale\\\"\\n                                           [items]=\\\"villeEscales$ | async\\\"\\n                                           [virtualScroll]=\\\"true\\\"\\n                                           [multiple]=\\\"true\\\"\\n                                           bindLabel=\\\"ville\\\"\\n                                           bindValue=\\\"ville\\\"\\n                                           placeholder=\\\"Selectionner une ville d'escale\\\"\\n                                           appendTo=\\\"body\\\"\\n                                           [(ngModel)]=\\\"trajetSelected.villeEscales\\\"\\n                                           name=\\\"villeEscales\\\" required\\n\\n                                           (select)=\\\"onSelected($event)\\\"\\n                                           #villeEscale=\\\"ngModel\\\">\\n                                    </ng-select>\\n                                    <div [hidden]=\\\"villeEscale.valid || villeEscale.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                        villes d'escales invalid !\\n                                    </div>\\n                                </div>\\n\\n\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{trajetSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"fa fa-road\\\"></i> Trajets</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"trajets$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n<!--                <ngx-datatable-column name=\\\"code\\\">-->\\n<!--                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>-->\\n<!--                        <span (click)=\\\"sort()\\\"> Code</span>-->\\n<!--                    </ng-template>-->\\n<!--                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>-->\\n<!--                        <strong>{{ value }}</strong>-->\\n<!--                    </ng-template>-->\\n<!--                </ngx-datatable-column>-->\\n\\n                <ngx-datatable-column name=\\\"pointDepart\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Point de depart</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"pointArrivee\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Point d'arrivée</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"distance\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Distance</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }} Km</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Ville d'escales</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong> {{ row.villeEscales.length }} </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n<!--                            (click)=\\\"openShow(contentMaps,row)\\\"-->\\n                            <a class=\\\"primary p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" >\\n                                <i class=\\\"fa fa-road font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-content\\\">\\n                <div class=\\\"px-3\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-road\\\"></i> {{typeAcheminementSelected.uid ? typeAcheminementSelected.libelle : 'Nouveau type d\\\\'acheminement'}}</h4>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Libelle</label>\\n                                <input type=\\\"text\\\" id=\\\"nama\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Libelle\\\"\\n                                       [(ngModel)]=\\\"typeAcheminementSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                       #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    libelle invalid !\\n                                </div>\\n\\n<!--                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">-->\\n<!--                                    libelle invalid !</small>-->\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea id=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                                          placeholder=\\\"Description\\\"\\n                                          [(ngModel)]=\\\"typeAcheminementSelected.description\\\" name=\\\"description\\\" required\\n                                          #description=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                </textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{typeAcheminementSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"fa fa-road\\\"></i> Type d'achéminement</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"typeAcheminements$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"description\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Description</ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-content\\\">\\n                <div class=\\\"px-3\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"ft-layout\\\"></i> {{typeColisSelected.uid ? typeColisSelected.libelle : 'Nouveau type de colis'}}</h4>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Libelle</label>\\n                                <input type=\\\"text\\\" id=\\\"nama\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Libelle\\\"\\n                                       [(ngModel)]=\\\"typeColisSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                       #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    libelle invalid !\\n                                </div>\\n\\n<!--                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">-->\\n<!--                                    libelle invalid !</small>-->\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Code</label>\\n                                <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Code\\\"\\n                                       [(ngModel)]=\\\"typeColisSelected.code\\\" name=\\\"code\\\"\\n                                       #code=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea id=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                                          placeholder=\\\"Description\\\"\\n                                          [(ngModel)]=\\\"typeColisSelected.description\\\" name=\\\"description\\\" required\\n                                          #description=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                </textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{typeColisSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"ft-layout\\\"></i> Type de colis</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"typeColiss$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"code\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Code</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"description\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Description</ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-content\\\">\\n                <div class=\\\"px-3\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"ft-grid\\\"></i> {{typeDevisSelected.uid ? typeDevisSelected.libelle : 'Nouveau type de devis'}}</h4>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Libelle</label>\\n                                <input type=\\\"text\\\" id=\\\"nama\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Libelle\\\"\\n                                       [(ngModel)]=\\\"typeDevisSelected.libelle\\\" name=\\\"libelle\\\" required\\n                                       #libelle=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                <div [hidden]=\\\"libelle.valid || libelle.pristine\\\"\\n                                     class=\\\"alert alert-danger\\\">\\n                                    libelle invalid !\\n                                </div>\\n\\n<!--                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">-->\\n<!--                                    libelle invalid !</small>-->\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"nama\\\">Code</label>\\n                                <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Code\\\"\\n                                       [(ngModel)]=\\\"typeDevisSelected.code\\\" name=\\\"code\\\"\\n                                       #code=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"description\\\">Description</label>\\n                                <textarea id=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                                          placeholder=\\\"Description\\\"\\n                                          [(ngModel)]=\\\"typeDevisSelected.description\\\" name=\\\"description\\\" required\\n                                          #description=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                                </textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{typeDevisSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"ft-grid\\\"></i> Type de devis</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body pt-3 text-left\\\">\\n                        <form class=\\\"taskboard-app-input row\\\">\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                                    <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                                </button>\\n                            </fieldset>\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                                <div class=\\\"form-control-position\\\">\\n                                    <i class=\\\"icon-emoticon-smile\\\"></i>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                            </fieldset>\\n\\n                            <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                                    <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                                    <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                                </button>\\n                            </fieldset>\\n                        </form>\\n                    </div>\\n                </div>\\n            </section>\\n\\n            <ngx-datatable\\n                    [rows]=\\\"typeDeviss$ | async\\\"\\n                    [loadingIndicator]=\\\"true\\\"\\n                    [swapColumns]=\\\"true\\\"\\n                    class='bootstrap'\\n                    [columns]=\\\"columns\\\"\\n                    [columnMode]=\\\"columnMode\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [rowHeight]=\\\"'auto'\\\"\\n                    [reorderable]=\\\"true\\\"\\n                    [limit]=\\\"10\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n            >\\n\\n                <ngx-datatable-column name=\\\"createdDate\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value ? value:'admin'  }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"code\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Code</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"libelle\\\">\\n                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                        <span (click)=\\\"sort()\\\"> Libelle</span>\\n                    </ng-template>\\n                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"description\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Description</ng-template>\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <strong>{{ value }}</strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"uid\\\">\\n                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <strong>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                        </strong>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n            </ngx-datatable>\\n\\n\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"<!-- Filter Datatable Options Starts -->\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"px-4\\\">\\n                    <form class=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                        <div class=\\\"form-body\\\">\\n                            <h4 class=\\\"form-section\\\"><i class=\\\"fa fa-map-o\\\"></i> {{villeEscaleSelected.uid ? villeEscaleSelected.ville : 'Nouvelle ville d\\\\'escale'}}</h4>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"pay\\\">Pays</label>\\n                                        <ng-select id=\\\"pay\\\"\\n                                           [items]=\\\"pays\\\"\\n                                           [virtualScroll]=\\\"true\\\"\\n                                           bindLabel=\\\"name\\\" bindValue=\\\"name\\\" placeholder=\\\"Selectionner le pays\\\" appendTo=\\\"body\\\"\\n                                           [(ngModel)]=\\\"villeEscaleSelected.pays\\\" name=\\\"pays\\\" required\\n                                           (select)=\\\"onSelected($event)\\\"\\n                                           #pay=\\\"ngModel\\\">\\n                                        </ng-select>\\n                                        <div [hidden]=\\\"pay.valid || pay.pristine\\\" class=\\\"alert alert-danger\\\">\\n                                            pays invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"ville\\\">Ville</label>\\n                                        <input type=\\\"text\\\" id=\\\"ville\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Ville\\\"\\n                                               [(ngModel)]=\\\"villeEscaleSelected.ville\\\" name=\\\"ville\\\" required\\n                                               #ville=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n\\n                                        <div [hidden]=\\\"ville.valid || ville.pristine\\\"\\n                                             class=\\\"alert alert-danger\\\">\\n                                            ville invalid !\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"address\\\">Adresse</label>\\n                                <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\"\\n                                       placeholder=\\\"Adresse\\\"\\n                                       [(ngModel)]=\\\"villeEscaleSelected.address\\\" name=\\\"address\\\"\\n                                       #address=\\\"ngModel\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\">\\n                            </div>\\n\\n                            <div style=\\\"width: 100%\\\">\\n\\n<!--                                <div class=\\\"form-group\\\">-->\\n<!--                                    <mat-google-maps-autocomplete-->\\n<!--                                            [country]=\\\"villeEscaleSelected.pays\\\"-->\\n<!--                                            type=\\\"address\\\"-->\\n<!--                                            placeholderText=\\\"Adresse sur maps\\\"-->\\n<!--                                            id=\\\"address\\\" [(ngModel)]=\\\"villeEscaleSelected.address\\\" name=\\\"address\\\"-->\\n<!--                                            (onAutocompleteSelected)=\\\"onAutocompleteSelected($event)\\\"-->\\n<!--                                            (onLocationSelected)=\\\"onLocationSelected($event)\\\"-->\\n<!--                                            (onGermanAddressMapped)=\\\"onGermanAddressMapped($event)\\\">-->\\n<!--                                    </mat-google-maps-autocomplete>-->\\n<!--                                </div>-->\\n\\n                                <div class=\\\"form-group\\\" style=\\\"height: 250px;\\\">\\n                                    <agm-map\\n                                        [latitude]=\\\"latitude\\\"\\n                                        [longitude]=\\\"longitude\\\"\\n                                        [scrollwheel]=\\\"true\\\"\\n                                        [zoom]=\\\"zoom\\\">\\n                                        <agm-marker\\n                                            [latitude]=\\\"latitude\\\"\\n                                            [longitude]=\\\"longitude\\\"\\n                                            [markerDraggable]=\\\"true\\\"\\n                                            (dragEnd)=\\\"markerDragEnd($event)\\\"></agm-marker>\\n                                    </agm-map>\\n                                </div>\\n\\n\\n                            </div>\\n\\n\\n                        </div>\\n\\n                        <div class=\\\"form-actions\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-raised btn-warning mr-1\\\" (click)=\\\"d('Cross click')\\\">\\n                                <i class=\\\"ft-x\\\"></i> Annuler\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-raised btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n                                <i class=\\\"fa fa-check-square-o\\\"></i>  {{villeEscaleSelected.uid ? 'Modifier':'Ajouter'}}\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n</ng-template>\\n\\n\\n<section id=\\\"filter\\\" class=\\\"mb-3\\\">\\n    <div class=\\\"row text-left\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"content-header\\\"><i class=\\\"fa fa-map-o\\\"></i> Ville d'escale</div>\\n            <p class=\\\"content-sub-header\\\">Tables with some actions and with more feathers.</p>\\n        </div>\\n    </div>\\n\\n    <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n                <form class=\\\"taskboard-app-input row\\\">\\n                    <fieldset class=\\\"position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\" style=\\\"width: 100%\\\" (click)=\\\"openAdd(content)\\\">\\n                            <i class=\\\"ft ft-plus-circle d-lg-none d-xl-inline-block\\\"></i>\\n                            <span class=\\\"d-lg-inline-block d-none ml-1\\\">Nouveau</span>\\n                        </button>\\n                    </fieldset>\\n                    <fieldset class=\\\"position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n                        <div class=\\\"form-control-position\\\">\\n                            <i class=\\\"icon-emoticon-smile\\\"></i>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder='Chercher' (keyup)='updateFilter($event)'>\\n                    </fieldset>\\n\\n                    <fieldset class=\\\"position-relative has-icon-left col-md-2 col-12 mb-1 add-task-btn\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary px-4 mb-0\\\">\\n                            <i class=\\\"ft ft-search d-lg-none d-xl-inline-block\\\"></i>\\n                            <span class=\\\"d-lg-inline-block d-none ml-1\\\">Chercher</span>\\n                        </button>\\n                    </fieldset>\\n                </form>\\n            </div>\\n        </div>\\n    </section>\\n\\n    <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n        <div class=\\\"card\\\">\\n             <ngb-tabset\\n                 type=\\\"pills\\\"\\n                 [justify]=\\\"currentJustify\\\"\\n             >\\n            <ngb-tab>\\n                <ng-template ngbTabTitle><b><i class=\\\"fa fa-th-list\\\"></i> Tableau ville d'escale</b></ng-template>\\n                <ng-template ngbTabContent>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <ngx-datatable\\n                                    [rows]=\\\"villeEscales$ | async\\\"\\n                                    [loadingIndicator]=\\\"true\\\"\\n                                    [swapColumns]=\\\"true\\\"\\n                                    class='bootstrap'\\n                                    [columns]=\\\"columns\\\"\\n                                    [columnMode]=\\\"columnMode\\\"\\n                                    [headerHeight]=\\\"40\\\"\\n                                    [footerHeight]=\\\"40\\\"\\n                                    [rowHeight]=\\\"'auto'\\\"\\n                                    [reorderable]=\\\"true\\\"\\n                                    [limit]=\\\"10\\\"\\n                                    (select)=\\\"onSelect($event)\\\"\\n                            >\\n\\n                                <ngx-datatable-column name=\\\"createdDate\\\">\\n                                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template> Date </ng-template>\\n                                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                        <strong>{{ toDate(value) | date:'dd/MM/yyyy HH:mm'  }}</strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                                <ngx-datatable-column name=\\\"createdByDisplayName\\\">\\n                                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                                        <span (click)=\\\"sort()\\\">Acteur</span>\\n                                    </ng-template>\\n                                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                        <strong>{{ value ? value:'admin'  }}</strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                                <ngx-datatable-column name=\\\"pays\\\">\\n                                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                                        <span (click)=\\\"sort()\\\"> Pays</span>\\n                                    </ng-template>\\n                                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                        <strong>{{ value }}</strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                                <ngx-datatable-column name=\\\"ville\\\">\\n                                    <ng-template let-column=\\\"column\\\" let-sort=\\\"sortFn\\\" ngx-datatable-header-template>\\n                                        <span (click)=\\\"sort()\\\"> Ville</span>\\n                                    </ng-template>\\n                                    <ng-template let-row=\\\"value\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                        <strong>{{ value }}</strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                                <ngx-datatable-column name=\\\"address\\\">\\n                                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Adresse</ng-template>\\n                                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                        <strong>{{ value }}</strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                                <ngx-datatable-column name=\\\"uid\\\">\\n                                    <ng-template let-column=\\\"column\\\" ngx-datatable-header-template>Actions</ng-template>\\n                                    <ng-template let-value=\\\"value\\\" let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                                        <strong>\\n                                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"openEdite(content,row)\\\">\\n                                                <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                                            </a>\\n                                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"confirmCancelButton(value)\\\">\\n                                                <i class=\\\"ft-x font-medium-3 mr-2\\\"></i>\\n                                            </a>\\n                                        </strong>\\n                                    </ng-template>\\n                                </ngx-datatable-column>\\n\\n                            </ngx-datatable>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </ngb-tab>\\n\\n            <ngb-tab>\\n                <ng-template ngbTabTitle><b><i class=\\\"fa fa-map-marker\\\"></i> Géolocalisation ville d'escale</b></ng-template>\\n                <ng-template ngbTabContent>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <agm-map\\n                                        [latitude]=\\\"latitude\\\"\\n                                        [longitude]=\\\"longitude\\\"\\n                                        [scrollwheel]=\\\"true\\\"\\n                                        [zoom]=\\\"zoom\\\"\\n                                        style=\\\"height: 100%; width: 100%; position: absolute; top: 0px; left: 0px;background-color: rgb(229, 227, 223);\\\"\\n                                >\\n                                    <agm-marker\\n                                            [latitude]=\\\"latitude\\\"\\n                                            [longitude]=\\\"longitude\\\"\\n                                            [markerDraggable]=\\\"true\\\"\\n                                            (dragEnd)=\\\"markerDragEnd($event)\\\"></agm-marker>\\n                                </agm-map>\\n                            </div>\\n                        </div>\\n                </ng-template>\\n            </ngb-tab>\\n\\n        </ngb-tabset>\\n        </div>\\n    </section>\\n\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYXRpb24vY29tcG9uZW50L25hdHVyZS1jb2xpcy9uYXR1cmUtY29saXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {NatureColis} from \"../../model/nature-colis\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";\nimport {NatureColisService} from \"../../service/nature-colis.service\";\n\n\n@Component({\n    selector: 'app-nature-colis',\n    templateUrl: './nature-colis.component.html',\n    styleUrls: ['./nature-colis.component.scss'],\n})\n\nexport class NatureColisComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    closeResult: string;\n    natureColisSelected: NatureColis;\n\n    natureColiss$: Observable<NatureColis[]>\n\n    columnMode = ColumnMode.force;\n\n    columns = [{ name: 'createdDate', sortable: true }, { name: 'createdByDisplayName',sortable: true },{ name: 'libelle',sortable: true }, { name: 'description', sortable: false }, ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n    constructor(\n        private service:NatureColisService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.natureColiss$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.natureColiss$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.natureColisSelected);\n        this.natureColisSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.natureColisSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.natureColisSelected.keys = Helpers.createKeywords(this.natureColisSelected.libelle);\n                        this.service.create(this.natureColisSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Cette nature du Colis ${this.natureColisSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.natureColisSelected.keys = Helpers.createKeywords(this.natureColisSelected.libelle);\n        this.service.update(this.natureColisSelected.uid,this.natureColisSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.natureColisSelected = new NatureColis();\n        this.modal.open(content)\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.natureColisSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.natureColisSelected = value;\n        this.modal.open(content)\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.natureColisSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n    onSelect(event) {\n        const selected: NatureColis = (event.selected)[0];\n\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n}\n","module.exports = \"agm-map {\\n  height: 300px;\\n  width: 100%; }\\n\\n.autocomplete-container {\\n  padding: 1rem 0 1rem 0;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9USUVDT1VSQS9Eb2N1bWVudHMvQUdVTEFSL2thZGktZG9jL2VnZi9lZ2Ytd2ViL3NyYy9hcHAvY29uZmlndXJhdGlvbi9jb21wb25lbnQvcG9pbnQtZGVwb3QvcG9pbnQtZGVwb3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsV0FBVyxFQUFBOztBQUViO0VBQ0Usc0JBQXNCO0VBQ3RCLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYXRpb24vY29tcG9uZW50L3BvaW50LWRlcG90L3BvaW50LWRlcG90LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gIGhlaWdodDogMzAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmF1dG9jb21wbGV0ZS1jb250YWluZXIge1xuICBwYWRkaW5nOiAxcmVtIDAgMXJlbSAwO1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";;\nimport PlaceResult = google.maps.places.PlaceResult;\nimport {Location, Appearance, GermanAddress} from '@angular-material-extensions/google-maps-autocomplete';\nimport {PointDepot} from \"../../model/point-depot\";\nimport {PointDepotService} from \"../../service/point-depot.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {VilleEscale} from \"../../model/ville-escale\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\n\n@Component({\n    selector: 'app-poit-depot',\n    templateUrl: './point-depot.component.html',\n    styleUrls: ['./point-depot.component.scss'],\n})\n\nexport class PointDepotComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    pays:any;\n\n    closeResult: string;\n    pointDepotSelected: PointDepot;\n\n    pointDepots$: Observable<PointDepot[]>\n\n    columnMode = ColumnMode.force;\n\n    columns = [\n        { name: 'createdDate', sortable: true },\n        { name: 'createdByDisplayName',sortable: true },\n        { name: 'libelle',sortable: true },\n        { name: 'code',sortable: true },\n        { name: 'address', sortable: false },\n        { name: 'nameResponsable', sortable: true },\n    ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n\n    public appearance = Appearance;\n    public zoom: number;\n    public latitude: number;\n    public longitude: number;\n    public selectedAddress: PlaceResult;\n\n\n    constructor(\n        private service:PointDepotService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            this.zoom = 10;\n            this.latitude = 52.520008;\n            this.longitude = 13.404954;\n\n            this.pays = environment.pays\n\n            this.setCurrentPosition();\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.pointDepots$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.pointDepots$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.pointDepotSelected);\n        this.pointDepotSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.pointDepotSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.pointDepotSelected.keys = Helpers.createKeywords(this.pointDepotSelected.libelle);\n                        this.service.create(this.pointDepotSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Cette point de depot ${this.pointDepotSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.pointDepotSelected.keys = Helpers.createKeywords(this.pointDepotSelected.libelle);\n        this.service.update(this.pointDepotSelected.uid,this.pointDepotSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.pointDepotSelected = new PointDepot();\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.pointDepotSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.pointDepotSelected = value;\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.pointDepotSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n    onSelect(event) {\n        const selected: PointDepot = (event.selected)[0];\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n\n    // initial user position on the map\n    private setCurrentPosition() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.latitude = position.coords.latitude;\n                this.longitude = position.coords.longitude;\n                this.pointDepotSelected.geopoint = new GeoPoint(this.latitude, this.longitude);\n                this.zoom = 12;\n            });\n            this.latitude\n        }\n    }\n\n    onAutocompleteSelected(result: PlaceResult) {\n        console.log('onAutocompleteSelected ===>>>', result);\n        this.pointDepotSelected.geopoint = new GeoPoint(result.geometry.location.lat(), result.geometry.location.lng());\n        this.pointDepotSelected.address = result.formatted_address;\n    }\n\n    onLocationSelected(location: Location) {\n        console.log('onLocationSelected ===>>>', location);\n        this.latitude = location.latitude;\n        this.longitude = location.longitude;\n        this.pointDepotSelected.geopoint = new GeoPoint(location.latitude,location.longitude);\n    }\n\n    onGermanAddressMapped($event: GermanAddress) {\n        console.log('onGermanAddressMapped ===>>>', $event);\n        this.pointDepotSelected.geopoint = new GeoPoint($event.geoLocation.latitude,$event.geoLocation.longitude);\n        this.pointDepotSelected.address = $event.displayAddress;\n        this.pointDepotSelected.pays = $event.state.long;\n    }\n\n    markerDragEnd($event) {\n        console.log('markerDragEnd ===>>>', $event.coords);\n        console.log('markerDragEnd lat ===>>>', $event.coords.lat);\n        console.log('markerDragEnd lng ===>>>', $event.coords.lng);\n        this.pointDepotSelected.geopoint = new GeoPoint($event.coords.lat,$event.coords.lng);\n\n    }\n\n    onSelected($event) {\n        console.log('onSelected ===>>>', $event);\n        console.log('onSelected value ===>>>', $event.value);\n    }\n}\n","module.exports = \"agm-map {\\n  height: 300px;\\n  width: 100%; }\\n\\n.autocomplete-container {\\n  padding: 1rem 0 1rem 0;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9USUVDT1VSQS9Eb2N1bWVudHMvQUdVTEFSL2thZGktZG9jL2VnZi9lZ2Ytd2ViL3NyYy9hcHAvY29uZmlndXJhdGlvbi9jb21wb25lbnQvc29jaWV0ZS9zb2NpZXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFdBQVcsRUFBQTs7QUFFYjtFQUNFLHNCQUFzQjtFQUN0QixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb25maWd1cmF0aW9uL2NvbXBvbmVudC9zb2NpZXRlL3NvY2lldGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4uYXV0b2NvbXBsZXRlLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDFyZW0gMCAxcmVtIDA7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";;\nimport PlaceResult = google.maps.places.PlaceResult;\nimport {Location, Appearance, GermanAddress} from '@angular-material-extensions/google-maps-autocomplete';\nimport {Societe} from \"../../model/societe\";\nimport {SocieteService} from \"../../service/societe.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {VilleEscale} from \"../../model/ville-escale\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\n\n@Component({\n    selector: 'app-societe',\n    templateUrl: './societe.component.html',\n    styleUrls: ['./societe.component.scss'],\n})\n\nexport class SocieteComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    pays:any;\n\n    closeResult: string;\n    societeSelected: Societe;\n\n    societes$: Observable<Societe[]>\n\n\n    columns = [\n        { name: 'createdDate', sortable: true },\n        { name: 'createdByDisplayName',sortable: true },\n        { name: 'libelle',sortable: true },\n        { name: 'code',sortable: true },\n        { name: 'phone',sortable: true },\n        { name: 'email',sortable: true },\n        { name: 'ville',sortable: true },\n        { name: 'address', sortable: false },\n    ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n    constructor(\n        private service:SocieteService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            this.pays = environment.pays\n\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.societes$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.societes$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.societeSelected);\n        this.societeSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.societeSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.societeSelected.keys = Helpers.createKeywords(this.societeSelected.libelle);\n                        this.service.create(this.societeSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Cette point de depot ${this.societeSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.societeSelected.keys = Helpers.createKeywords(this.societeSelected.libelle);\n        this.service.update(this.societeSelected.uid,this.societeSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.societeSelected = new Societe();\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.societeSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.societeSelected = value;\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.societeSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n    onSelect(event) {\n        const selected: Societe = (event.selected)[0];\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    onSelected($event) {\n        console.log('onSelected ===>>>', $event);\n        console.log('onSelected value ===>>>', $event.value);\n    }\n}\n","module.exports = \"agm-map {\\n  height: 300px;\\n  width: 100%; }\\n\\n.autocomplete-container {\\n  padding: 1rem 0 1rem 0;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9USUVDT1VSQS9Eb2N1bWVudHMvQUdVTEFSL2thZGktZG9jL2VnZi9lZ2Ytd2ViL3NyYy9hcHAvY29uZmlndXJhdGlvbi9jb21wb25lbnQvdHJhamV0L3RyYWpldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixXQUFXLEVBQUE7O0FBRWI7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29uZmlndXJhdGlvbi9jb21wb25lbnQvdHJhamV0L3RyYWpldC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xuICBoZWlnaHQ6IDMwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5hdXRvY29tcGxldGUtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMXJlbSAwIDFyZW0gMDtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";;\nimport PlaceResult = google.maps.places.PlaceResult;\nimport {Location, Appearance, GermanAddress} from '@angular-material-extensions/google-maps-autocomplete';\nimport {Trajet} from \"../../model/trajet\";\nimport {TrajetService} from \"../../service/trajet.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {VilleEscale} from \"../../model/ville-escale\";\nimport {VilleEscaleService} from \"../../service/ville-escale.service\";\n\n\n@Component({\n    selector: 'app-trajet',\n    templateUrl: './trajet.component.html',\n    styleUrls: ['./trajet.component.scss'],\n})\n\nexport class TrajetComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    pays:any;\n\n    closeResult: string;\n    trajetSelected: Trajet;\n\n    trajets$: Observable<Trajet[]>\n\n    villeEscales$: Observable<VilleEscale[]>\n\n    columnMode = ColumnMode.force;\n\n    isCollapsed: true;\n\n    columns = [\n        { name: 'createdDate', sortable: true },\n        { name: 'createdByDisplayName',sortable: true },\n        { name: 'libelle',sortable: true },\n        { name: 'code',sortable: true },\n        { name: 'pointDepart',sortable: true },\n        { name: 'pointArrivee',sortable: true },\n        { name: 'distance',sortable: true },\n    ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n    \n\n    constructor(\n        private service:TrajetService,\n        private villeEscaleService:VilleEscaleService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            \n            this.pays = environment.pays\n\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.villeEscales$ = this.villeEscaleService.findAll();\n            this.trajets$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.trajets$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.trajetSelected);\n        this.trajetSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.trajetSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.trajetSelected.keys = Helpers.createKeywords(this.trajetSelected.libelle);\n                        this.service.create(this.trajetSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Ce trajet ${this.trajetSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.trajetSelected.keys = Helpers.createKeywords(this.trajetSelected.libelle);\n        this.service.update(this.trajetSelected.uid,this.trajetSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.trajetSelected = new Trajet();\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.trajetSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openShow(contentMaps,value) {\n        console.log(\"openShow\", value)\n        this.trajetSelected = value;\n        this.modal.open(contentMaps,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.trajetSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.trajetSelected = value;\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.trajetSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n    onSelect(event) {\n        const selected: Trajet = (event.selected)[0];\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    onSelected($event) {\n        console.log('onSelected ===>>>', $event);\n        console.log('onSelected value ===>>>', $event.value);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYXRpb24vY29tcG9uZW50L3R5cGUtYWNoZW1pbmVtZW50L3R5cGUtYWNoZW1pbmVtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";\nimport {TypeAcheminement} from \"../../model/type-acheminement\";\nimport {TypeAcheminementService} from \"../../service/type-acheminement.service\";\n\n\n@Component({\n    selector: 'app-type-acheminement',\n    templateUrl: './type-acheminement.component.html',\n    styleUrls: ['./type-acheminement.component.scss'],\n})\n\nexport class TypeAcheminementComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    closeResult: string;\n    typeAcheminementSelected: TypeAcheminement;\n\n    typeAcheminements$: Observable<TypeAcheminement[]>\n\n    columnMode = ColumnMode.force;\n\n    columns = [{ name: 'createdDate', sortable: true }, { name: 'createdByDisplayName',sortable: true },{ name: 'libelle',sortable: true }, { name: 'description', sortable: false }, ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n    constructor(\n        private service:TypeAcheminementService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.typeAcheminements$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.typeAcheminements$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.typeAcheminementSelected);\n        this.typeAcheminementSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.typeAcheminementSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.typeAcheminementSelected.keys = Helpers.createKeywords(this.typeAcheminementSelected.libelle);\n                        this.service.create(this.typeAcheminementSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Cette nature du Colis ${this.typeAcheminementSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.typeAcheminementSelected.keys = Helpers.createKeywords(this.typeAcheminementSelected.libelle);\n        this.service.update(this.typeAcheminementSelected.uid,this.typeAcheminementSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.typeAcheminementSelected = new TypeAcheminement();\n        this.modal.open(content)\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.typeAcheminementSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.typeAcheminementSelected = value;\n        this.modal.open(content)\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.typeAcheminementSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n    onSelect(event) {\n        const selected: TypeAcheminement = (event.selected)[0];\n\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYXRpb24vY29tcG9uZW50L3R5cGUtY29saXMvdHlwZS1jb2xpcy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {TypeColis} from \"../../model/type-colis\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {AuthService} from \"../../../shared/services/auth.service\";\nimport {QueryFn} from \"@angular/fire/firestore\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport * as alertFunctions from \"../../../shared/data/sweet-alerts\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";\nimport {TypeColisService} from \"../../service/type-colis.service\";\n\n\n@Component({\n    selector: 'app-type-colis',\n    templateUrl: './type-colis.component.html',\n    styleUrls: ['./type-colis.component.scss'],\n})\n\nexport class TypeColisComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    closeResult: string;\n    typeColisSelected: TypeColis;\n\n    typeColiss$: Observable<TypeColis[]>\n\n    columnMode = ColumnMode.force;\n\n    columns = [{ name: 'createdDate', sortable: true }, { name: 'createdByDisplayName',sortable: true },{ name: 'code',sortable: true },{ name: 'libelle',sortable: true }, { name: 'description', sortable: false }, ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n    constructor(\n        private service:TypeColisService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n            this.initData();\n        }\n\n        toDate(value){\n             return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.typeColiss$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.typeColiss$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.typeColisSelected);\n        this.typeColisSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.typeColisSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.typeColisSelected.keys = Helpers.createKeywords(this.typeColisSelected.libelle);\n                        this.service.create(this.typeColisSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Le typde de Colis ${this.typeColisSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.typeColisSelected.keys = Helpers.createKeywords(this.typeColisSelected.libelle);\n        this.service.update(this.typeColisSelected.uid,this.typeColisSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.typeColisSelected = new TypeColis();\n        this.modal.open(content)\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.typeColisSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.typeColisSelected = value;\n        this.modal.open(content)\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.typeColisSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n    onSelect(event) {\n        const selected: TypeColis = (event.selected)[0];\n\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYXRpb24vY29tcG9uZW50L3R5cGUtZGV2aXMvdHlwZS1kZXZpcy5jb21wb25lbnQuc2NzcyJ9 */\"","import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild} from '@angular/core';\nimport {ColumnMode, DatatableComponent, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {TypeDevisService} from \"../../service/type-devis.service\";\nimport {Observable} from \"rxjs\";\nimport {TypeDevis} from \"../../model/type-devis\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {AuthService} from \"../../../shared/services/auth.service\";\nimport {QueryFn} from \"@angular/fire/firestore\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport * as alertFunctions from \"../../../shared/data/sweet-alerts\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";\n\n\n@Component({\n    selector: 'app-type-devis',\n    templateUrl: './type-devis.component.html',\n    styleUrls: ['./type-devis.component.scss'],\n})\n\nexport class TypeDevisComponent{\n\n\n    selectionType = SelectionType.cell;\n\n    closeResult: string;\n    typeDevisSelected: TypeDevis;\n\n    typeDeviss$: Observable<TypeDevis[]>\n\n    columnMode = ColumnMode.force;\n    // Table Column Titles\n    columns = [{ name: 'createdDate', sortable: true }, { name: 'createdByDisplayName',sortable: true },{ name: 'code',sortable: true },{ name: 'libelle',sortable: true }, { name: 'description', sortable: false }, ];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n    constructor(\n        private service:TypeDevisService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n        ) {\n         this.initData();\n        }\n\n        toDate(value){\n        return Helpers.fromaTimestamp(value);\n        }\n\n        initData(){\n            this.typeDeviss$ = this.service.findAll();\n        }\n\n    updateFilter(event):void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n       (val==null || val==undefined) ? this.initData():this.typeDeviss$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.typeDevisSelected);\n        this.typeDevisSelected.uid ? this.update():this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('libelle', this.typeDevisSelected.libelle)\n            .subscribe(\n                response => {\n\n                    if(response===undefined){\n                        this.typeDevisSelected.keys = Helpers.createKeywords(this.typeDevisSelected.libelle);\n                        this.service.create(this.typeDevisSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            },error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    }else {\n                      this.notification.error(`Le typde de devis ${this.typeDevisSelected.libelle} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.typeDevisSelected.keys = Helpers.createKeywords(this.typeDevisSelected.libelle);\n        this.service.update(this.typeDevisSelected.uid,this.typeDevisSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            },error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n\n    // Open default modal\n    openAdd(content):void {\n        this.typeDevisSelected = new TypeDevis();\n        this.modal.open(content)\n            .result\n            .then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.typeDevisSelected=null;\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    openEdite(content,value) {\n        console.log(\"openEdite\", value)\n        this.typeDevisSelected = value;\n        this.modal.open(content)\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.typeDevisSelected=null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n\n\n    onSelect(event) {\n        const selected: TypeDevis = (event.selected)[0];\n\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    confirmCancelButton(uid){\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult)=>{\n\n            if(response!=undefined && response.value){\n                this.service.delete(uid)\n            .then((res)=>this.notification.success(egfOption.successMessage))\n            .catch((error)=> this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>',response.value);\n        });\n    }\n\n\n\n}\n","module.exports = \"agm-map {\\n  height: 100%;\\n  width: 100%; }\\n\\n.modal-body {\\n  padding: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9USUVDT1VSQS9Eb2N1bWVudHMvQUdVTEFSL2thZGktZG9jL2VnZi9lZ2Ytd2ViL3NyYy9hcHAvY29uZmlndXJhdGlvbi9jb21wb25lbnQvdmlsbGUtZXNjYWxlL3ZpbGxlLWVzY2FsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBT2I7RUFHRyxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb25maWd1cmF0aW9uL2NvbXBvbmVudC92aWxsZS1lc2NhbGUvdmlsbGUtZXNjYWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG4vLy5hdXRvY29tcGxldGUtY29udGFpbmVyIHtcbi8vICBwYWRkaW5nOiAxcmVtIDAgMXJlbSAwO1xuLy8gIHdpZHRoOiAxMDAlO1xuLy99XG5cbi5tb2RhbC1ib2R5IHtcbiAgIC8vcG9zaXRpb246IHJlbGF0aXZlO1xuICAgLy9mbGV4OiAxIDEgYXV0bztcbiAgIHBhZGRpbmc6IDBweDtcbn0iXX0= */\"","import {Component, ViewChild} from '@angular/core';\nimport {ColumnMode, SelectionType} from \"@swimlane/ngx-datatable/release\";\nimport {Observable} from \"rxjs\";\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormBuilder, NgForm} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NotificationService} from \"../../../components/extra/notification/notification.service\";\nimport {egfOption} from \"../../../../environments/egf.option\";\nimport {Helpers} from \"../../../shared/utility\";\nimport swal, {SweetAlertResult} from \"sweetalert2\";\nimport {VilleEscale} from \"../../model/ville-escale\";\nimport {VilleEscaleService} from \"../../service/ville-escale.service\";\nimport PlaceResult = google.maps.places.PlaceResult;\nimport {Location, Appearance, GermanAddress} from '@angular-material-extensions/google-maps-autocomplete';\nimport {environment} from \"../../../../environments/environment\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\n\n@Component({\n    selector: 'app-ville-escale',\n    templateUrl: './ville-escale.component.html',\n    styleUrls: ['./ville-escale.component.scss'],\n})\n\nexport class VilleEscaleComponent {\n\n\n    selectionType = SelectionType.cell;\n\n    pays = [];\n\n    closeResult: string;\n    villeEscaleSelected: VilleEscale;\n\n    villeEscales$: Observable<VilleEscale[]>\n\n    columnMode = ColumnMode.force;\n\n    columns = [{name: 'createdDate', sortable: true}, {name: 'createdByDisplayName', sortable: true}, {\n        name: 'pays',\n        sortable: true\n    }, {name: 'ville', sortable: true}, {name: 'address', sortable: false},];\n\n\n    isLoading: boolean = false;\n\n    @ViewChild('f', {static: false}) form: NgForm;\n\n\n    currentJustify = 'justified';\n\n\n    public appearance = Appearance;\n    public zoom: number;\n    public latitude: number;\n    public longitude: number;\n    public selectedAddress: PlaceResult;\n\n    constructor(\n        private service: VilleEscaleService,\n        private modal: NgbModal,\n        private router: Router,\n        private route: ActivatedRoute,\n        private fb: FormBuilder,\n        private notification: NotificationService,\n    ) {\n        this.zoom = 10;\n        this.latitude = 52.520008;\n        this.longitude = 13.404954;\n\n        this.pays = environment.pays;\n\n        this.setCurrentPosition();\n        this.initData();\n    }\n\n    toDate(value) {\n        return Helpers.fromaTimestamp(value);\n    }\n\n    initData() {\n        this.villeEscales$ = this.service.findAll();\n    }\n\n    updateFilter(event): void {\n        const val = event.target.value.toLowerCase();\n        console.log('updateFilter', val);\n        (val == null || val == undefined) ? this.initData() : this.villeEscales$ = this.service.search(val);\n        // this.table.offset = 0;\n    }\n\n\n    onSubmit(): void {\n        console.log('onSubmit', this.villeEscaleSelected);\n\n        this.villeEscaleSelected.uid ? this.update() : this.add();\n    }\n\n    add(): void {\n        console.log('### add ###');\n        this.service.findAttribute('ville', this.villeEscaleSelected.ville)\n            .subscribe(\n                response => {\n\n                    if (response === undefined) {\n                        this.villeEscaleSelected.keys = Helpers.createKeywords(this.villeEscaleSelected.ville);\n                        this.service.create(this.villeEscaleSelected).subscribe(\n                            response => {\n                                this.notification.success(egfOption.successMessage)\n                                this.modal.dismissAll();\n                            }, error => {\n                                this.notification.error(egfOption.errorMessage);\n                            },\n                        );\n                    } else {\n                        this.notification.error(`Cette ville d\\'escale ${this.villeEscaleSelected.ville} existe !`)\n                    }\n                },\n                error => {\n                    this.notification.error(egfOption.errorMessage);\n                }\n            );\n    }\n\n    update(): void {\n        console.log('### update ###');\n        this.villeEscaleSelected.keys = Helpers.createKeywords(this.villeEscaleSelected.ville);\n        this.service.update(this.villeEscaleSelected.uid, this.villeEscaleSelected).subscribe(\n            response => {\n                console.log('response', response);\n                this.notification.success(egfOption.successMessage)\n                this.modal.dismissAll();\n            }, error => {\n                console.log('onSubmit', error);\n                this.notification.error(egfOption.errorMessage);\n            },\n        );\n    }\n\n\n    // Open default modal\n    openAdd(content): void {\n        this.villeEscaleSelected = new VilleEscale();\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.villeEscaleSelected = null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n    }\n\n    openEdite(content, value) {\n        console.log(\"openEdite\", value)\n        this.villeEscaleSelected = value;\n        this.modal.open(content,{size: 'lg'})\n            .result\n            .then((result) => {\n                this.closeResult = `Closed with: ${result}`;\n            }, (reason) => {\n                this.villeEscaleSelected = null;\n                this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n\n    }\n\n    // This function is used in open\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n    onSelect(event) {\n        const selected: VilleEscale = (event.selected)[0];\n\n        console.log('Select selected', selected);\n        console.log('Select selected', selected.ref);\n\n    }\n\n\n    onActivate({event}) {\n        console.log('Activate Event', event);\n    }\n\n    confirmCancelButton(uid) {\n        swal.fire({\n            title: 'Êtes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière !\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#0CC27E',\n            cancelButtonColor: '#FF586B',\n            confirmButtonText: 'Oui, supprimez',\n            cancelButtonText: 'Non, annulez',\n            confirmButtonClass: 'btn btn-success btn-raised mr-5',\n            cancelButtonClass: 'btn btn-danger btn-raised',\n            buttonsStyling: false\n        }).then((response: SweetAlertResult) => {\n\n            if (response != undefined && response.value) {\n                this.service.delete(uid)\n                    .then((res) => this.notification.success(egfOption.successMessage))\n                    .catch((error) => this.notification.error(egfOption.errorMessage))\n            }\n            console.log('confirmCancelButton value ===>>>', response.value);\n        });\n    }\n\n    // initial user position on the map\n    private setCurrentPosition() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.latitude = position.coords.latitude;\n                this.longitude = position.coords.longitude;\n                this.villeEscaleSelected.geopoint = new GeoPoint(this.latitude, this.longitude);\n                this.zoom = 12;\n            });\n            this.latitude\n        }\n    }\n\n    onAutocompleteSelected(result: PlaceResult) {\n        console.log('onAutocompleteSelected ===>>>', result);\n        this.villeEscaleSelected.geopoint = new GeoPoint(result.geometry.location.lat(), result.geometry.location.lng());\n        this.villeEscaleSelected.address = result.formatted_address;\n    }\n\n    onLocationSelected(location: Location) {\n        console.log('onLocationSelected ===>>>', location);\n        this.latitude = location.latitude;\n        this.longitude = location.longitude;\n        this.villeEscaleSelected.geopoint = new GeoPoint(location.latitude,location.longitude);\n    }\n\n    onGermanAddressMapped($event: GermanAddress) {\n        console.log('onGermanAddressMapped ===>>>', $event);\n        this.villeEscaleSelected.geopoint = new GeoPoint($event.geoLocation.latitude,$event.geoLocation.longitude);\n        this.villeEscaleSelected.address = $event.displayAddress;\n        this.villeEscaleSelected.pays = $event.state.long;\n}\n\n    markerDragEnd($event) {\n        console.log('markerDragEnd ===>>>', $event.coords);\n        console.log('markerDragEnd lat ===>>>', $event.coords.lat);\n        console.log('markerDragEnd lng ===>>>', $event.coords.lng);\n        this.villeEscaleSelected.geopoint = new GeoPoint($event.coords.lat,$event.coords.lng);\n\n    }\n\n    onSelected($event) {\n        console.log('onSelected ===>>>', $event);\n        console.log('onSelected value ===>>>', $event.value);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {TypeDevisComponent} from \"./component/type-devis/type-devis.component\";\nimport {TypeColisComponent} from \"./component/type-colis/type-colis.component\";\nimport {NatureColisComponent} from \"./component/nature-colis/nature-colis.component\";\nimport {VilleEscaleComponent} from \"./component/ville-escale/ville-escale.component\";\nimport {PointDepotComponent} from \"./component/point-depot/point-depot.component\";\nimport {TypeAcheminementComponent} from \"./component/type-acheminement/type-acheminement.component\";\nimport {SocieteComponent} from \"./component/societe/societe.component\";\nimport {TrajetComponent} from \"./component/trajet/trajet.component\";\nimport {AuthorizationGuard} from \"../shared/authentification/guard/authorization.guard\";\n\n\nconst routes: Routes = [\n  {\n    path: 'type-devis',\n    component: TypeDevisComponent,\n    data: {\n      title: 'Type de devis',\n      roles: ['TYPES_DEVIS','TYPE_DEVIS_ADD','TYPE_DEVIS_EDITE','TYPE_DEVIS_DELETE']\n    },\n    canActivate: [AuthorizationGuard]\n  },\n  {\n    path: 'type-colis',\n    component: TypeColisComponent,\n    data: {\n      title: 'Type de colis',\n      roles: ['TYPE_COLIS','TYPE_COLIS_ADD','TYPE_COLIS_EDITE','TYPE_COLIS_DELETE']\n    }\n  },\n  {\n    path: 'nature-colis',\n    component: NatureColisComponent,\n    data: {\n      title: 'Nature du colis',\n      roles: ['TYPE_COLIS','TYPE_COLIS_ADD','TYPE_COLIS_EDITE','TYPE_COLIS_DELETE']\n    }\n  },\n  {\n    path: 'ville-escale',\n    component: VilleEscaleComponent,\n    data: {\n      title: 'Ville d\\'escale'\n    }\n  },\n  {\n    path: 'point-depot',\n    component: PointDepotComponent,\n    data: {\n      title: 'Point de depots'\n    },\n    canActivate: [AuthorizationGuard]\n  },\n  {\n    path: 'type-acheminement',\n    component: TypeAcheminementComponent,\n    data: {\n      title: 'Type acheminements'\n    },\n    canActivate: [AuthorizationGuard]\n  },\n  {\n    path: 'societes',\n    component: SocieteComponent,\n    data: {\n      title: 'Sociétes'\n    },\n    canActivate: [AuthorizationGuard]\n  },\n  {\n    path: 'trajets',\n    component: TrajetComponent,\n    data: {\n      title: 'Trajets'\n    },\n    canActivate: [AuthorizationGuard]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfigurationRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from '@ngrx/store';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { ConfigurationRoutingModule } from \"./configuration-routing.module\";\n\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\nimport {TypeDevisComponent} from \"./component/type-devis/type-devis.component\";\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {FormsModule} from \"@angular/forms\";\nimport {TypeColisComponent} from \"./component/type-colis/type-colis.component\";\nimport {NatureColisComponent} from \"./component/nature-colis/nature-colis.component\";\nimport {VilleEscaleComponent} from \"./component/ville-escale/ville-escale.component\";\nimport {MatGoogleMapsAutocompleteModule} from \"@angular-material-extensions/google-maps-autocomplete\";\nimport {AgmCoreModule} from \"@agm/core\";\nimport {PointDepotComponent} from \"./component/point-depot/point-depot.component\";\nimport {TypeAcheminementComponent} from \"./component/type-acheminement/type-acheminement.component\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport { SocieteComponent } from './component/societe/societe.component';\nimport {TrajetComponent} from \"./component/trajet/trajet.component\";\nimport {NgbCollapseModule, NgbTabsetModule} from \"@ng-bootstrap/ng-bootstrap\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ConfigurationRoutingModule,\n        DragulaModule,\n        StoreModule.forFeature('task', taskReducer),\n        NgxDatatableModule,\n        FormsModule,\n        MatGoogleMapsAutocompleteModule,\n        AgmCoreModule,\n        MatCardModule,\n        NgSelectModule,\n        NgbCollapseModule,\n        NgbTabsetModule\n    ],\n    declarations: [\n        TypeDevisComponent,\n        TypeColisComponent,\n        NatureColisComponent,\n        VilleEscaleComponent,\n        PointDepotComponent,\n        TypeAcheminementComponent,\n        SocieteComponent,\n        TrajetComponent,\n    ],\n    providers:[]\n})\nexport class ConfigurationModule { }\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\n\nexport class NatureColis extends AbstractEntity<NatureColis> {\n  static colName = \"nature_colis\";\n\n  libelle: string;\n  description?: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\nexport class PointDepot extends AbstractEntity<PointDepot> {\n\n  static colName = \"point_depots\";\n\n  libelle: string;\n  code: string;\n  pays?: string;\n  ville?: string;\n  geopoint?: GeoPoint;\n  address?: string;\n  uidResponsable?: string;\n  nameResponsable?: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\nexport class Societe extends AbstractEntity<Societe> {\n\n  static colName = \"societes\";\n\n  libelle: string;\n\n  code: string;\n  phone: string;\n  email: string;\n\n  pays: string;\n  ville: string;\n\n  fax: string;\n  bp: string;\n\n  address: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\nimport {VilleEscale} from \"./ville-escale\";\n\nexport class Trajet extends AbstractEntity<Trajet> {\n  static colName = \"trajets\";\n\n  libelle: string;\n  code: string;\n\n  description?: string;\n  pointDepart: string;\n  pointArrivee: string;\n\n  distance?: number;\n  villeEscales?: string[];\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\n\nexport class TypeAcheminement extends AbstractEntity<TypeAcheminement> {\n  static colName = \"type_acheminements\";\n\n  libelle: string;\n  description?: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\n\nexport class TypeColis extends AbstractEntity<TypeColis> {\n  static colName = \"type_colis\";\n\n  libelle: string;\n  code?: string;\n  description?: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\n\nexport class TypeDevis extends AbstractEntity<TypeDevis> {\n  static colName = \"type_devis\";\n\n  libelle: string;\n  code?: string;\n  description?: string;\n}\n","\nimport {AbstractEntity} from \"../../shared/abstract/abstract.entity\";\nimport * as firebase from 'firebase';\nimport GeoPoint = firebase.firestore.GeoPoint;\n\nexport class VilleEscale extends AbstractEntity<VilleEscale> {\n\n  static colName = \"ville_escales\";\n\n  pays: string;\n  ville: string;\n  geopoint: GeoPoint;\n  address: string;\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {NatureColis} from \"../model/nature-colis\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NatureColisService extends AbstractService<NatureColis> {\n\n  getPath(): string {\n    return NatureColis.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {PointDepot} from \"../model/point-depot\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointDepotService extends AbstractService<PointDepot> {\n\n  getPath(): string {\n    return PointDepot.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {VilleEscale} from \"../model/ville-escale\";\nimport {Societe} from \"../model/societe\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocieteService extends AbstractService<Societe> {\n\n  getPath(): string {\n    return Societe.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {Trajet} from \"../model/trajet\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrajetService extends AbstractService<Trajet> {\n\n  getPath(): string {\n    return Trajet.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {NatureColis} from \"../model/nature-colis\";\nimport {TypeAcheminement} from \"../model/type-acheminement\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeAcheminementService extends AbstractService<TypeAcheminement> {\n\n  getPath(): string {\n    return TypeAcheminement.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {TypeColis} from \"../model/type-colis\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeColisService extends AbstractService<TypeColis> {\n\n  getPath(): string {\n    return TypeColis.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {TypeDevis} from \"../model/type-devis\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeDevisService extends AbstractService<TypeDevis> {\n\n  getPath(): string {\n    return TypeDevis.colName;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"../../shared/abstract/abstract.service\";\nimport {VilleEscale} from \"../model/ville-escale\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VilleEscaleService extends AbstractService<VilleEscale> {\n\n  getPath(): string {\n    return VilleEscale.colName;\n  }\n\n}\n"],"sourceRoot":""}